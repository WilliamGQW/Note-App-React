{"ast":null,"code":"var _jsxFileName = \"/Users/quanweigu/Desktop/Tech/React/Note-App-React/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport List from './components/List';\nimport Form from './components/form/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // need to send this data to List.jsx\n  const listData = [{\n    'id': 1,\n    'text': 'Test title first',\n    'description': 'Lorem Ipsum is simply dummy text of the printing. '\n  }, {\n    'id': 2,\n    'text': 'Test title second',\n    'description': 'Lorem Ipsum is simply dummy text of the printing. '\n  }, {\n    'id': 3,\n    'text': 'Test title third',\n    'description': 'Lorem Ipsum is simply dummy text of the printing. '\n  }, {\n    'id': 4,\n    'text': 'Test title four',\n    'description': 'Lorem Ipsum is simply dummy text of the printing. '\n  }];\n\n  // states\n  const [list, setList] = useState(listData);\n  const [currentSelectedItem, setCurrentSelectedItem] = useState();\n\n  // remove list item\n  //  by filtering out unmatched id\n  const deleteCurrentItem = id => {\n    setList(list.filter(item => item.id !== id));\n  };\n\n  // store a new list item to the list of data\n  const storeNewListItem = e => {\n    // let newList = [...list, e]; // add to tail\n    let newList = [e, ...list]; // add to head\n    setList(newList);\n    console.log(newList);\n\n    // or...\n    // let newList = [];\n    // list.map((item) => {\n    //     newList.push(item);\n    // })\n    // newList.unshift(e);\n  };\n\n  // clone the list item values;\n  const cloneCurrentItem = id => {\n    //filter out the item from list which has the same id as the current item id.\n\n    setCurrentSelectedItem(list.filter(item => item.id === id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      store: storeNewListItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      list: list,\n      deleteListItem: deleteCurrentItem,\n      cloneListItem: cloneCurrentItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"sEuVs/0UfP/0bunBD3Mo+p+4lSY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","List","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","listData","list","setList","currentSelectedItem","setCurrentSelectedItem","deleteCurrentItem","id","filter","item","storeNewListItem","e","newList","console","log","cloneCurrentItem","children","fileName","_jsxFileName","lineNumber","columnNumber","store","deleteListItem","cloneListItem","_c","$RefreshReg$"],"sources":["/Users/quanweigu/Desktop/Tech/React/Note-App-React/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport Header from './components/Header'\nimport List from './components/List'\nimport Form from './components/form/Form'\nfunction App() {\n\n    // need to send this data to List.jsx\n    const listData = [\n        {\n            'id': 1,\n            'text': 'Test title first',\n            'description': 'Lorem Ipsum is simply dummy text of the printing. '\n        },\n        {\n            'id': 2,\n            'text': 'Test title second',\n            'description': 'Lorem Ipsum is simply dummy text of the printing. '\n        },\n        {\n            'id': 3,\n            'text': 'Test title third',\n            'description': 'Lorem Ipsum is simply dummy text of the printing. '\n        },\n        {\n            'id': 4,\n            'text': 'Test title four',\n            'description': 'Lorem Ipsum is simply dummy text of the printing. '\n        },\n    ];\n\n    // states\n    const [list, setList] = useState(listData);\n    const [currentSelectedItem, setCurrentSelectedItem] = useState();\n\n    // remove list item\n    //  by filtering out unmatched id\n    const deleteCurrentItem = (id) => {\n        setList(list.filter((item) => (item.id !== id)))\n    }\n\n    // store a new list item to the list of data\n    const storeNewListItem = (e) => {\n        // let newList = [...list, e]; // add to tail\n        let newList = [e, ...list]; // add to head\n        setList(newList);\n        console.log(newList);\n\n        // or...\n        // let newList = [];\n        // list.map((item) => {\n        //     newList.push(item);\n        // })\n        // newList.unshift(e);\n\n    }\n\n    // clone the list item values;\n    const cloneCurrentItem = (id) => {\n        //filter out the item from list which has the same id as the current item id.\n\n        setCurrentSelectedItem(list.filter((item) =>\n            item.id === id\n        ));\n\n    }\n\n    return (\n        <>\n            <Header />\n            <Form store={storeNewListItem}\n            />\n            <List list={list} deleteListItem={deleteCurrentItem}\n                cloneListItem={cloneCurrentItem} />\n        </>\n    )\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEX;EACA,MAAMC,QAAQ,GAAG,CACb;IACI,IAAI,EAAE,CAAC;IACP,MAAM,EAAE,kBAAkB;IAC1B,aAAa,EAAE;EACnB,CAAC,EACD;IACI,IAAI,EAAE,CAAC;IACP,MAAM,EAAE,mBAAmB;IAC3B,aAAa,EAAE;EACnB,CAAC,EACD;IACI,IAAI,EAAE,CAAC;IACP,MAAM,EAAE,kBAAkB;IAC1B,aAAa,EAAE;EACnB,CAAC,EACD;IACI,IAAI,EAAE,CAAC;IACP,MAAM,EAAE,iBAAiB;IACzB,aAAa,EAAE;EACnB,CAAC,CACJ;;EAED;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACU,QAAQ,CAAC;EAC1C,MAAM,CAACG,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGd,QAAQ,EAAE;;EAEhE;EACA;EACA,MAAMe,iBAAiB,GAAIC,EAAE,IAAK;IAC9BJ,OAAO,CAACD,IAAI,CAACM,MAAM,CAAEC,IAAI,IAAMA,IAAI,CAACF,EAAE,KAAKA,EAAG,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAIC,CAAC,IAAK;IAC5B;IACA,IAAIC,OAAO,GAAG,CAACD,CAAC,EAAE,GAAGT,IAAI,CAAC,CAAC,CAAC;IAC5BC,OAAO,CAACS,OAAO,CAAC;IAChBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;;IAEpB;IACA;IACA;IACA;IACA;IACA;EAEJ,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAIR,EAAE,IAAK;IAC7B;;IAEAF,sBAAsB,CAACH,IAAI,CAACM,MAAM,CAAEC,IAAI,IACpCA,IAAI,CAACF,EAAE,KAAKA,EAAE,CACjB,CAAC;EAEN,CAAC;EAED,oBACIX,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACIpB,OAAA,CAACJ,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACVxB,OAAA,CAACF,IAAI;MAAC2B,KAAK,EAAEX;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5B,eACFxB,OAAA,CAACH,IAAI;MAACS,IAAI,EAAEA,IAAK;MAACoB,cAAc,EAAEhB,iBAAkB;MAChDiB,aAAa,EAAER;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACxC;AAEX;AAACpB,EAAA,CAvEQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAyEZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}