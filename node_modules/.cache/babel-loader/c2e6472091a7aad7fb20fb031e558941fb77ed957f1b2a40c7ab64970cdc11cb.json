{"ast":null,"code":"var _jsxFileName = \"/Users/quanweigu/Desktop/Tech/React/Note-App-React/src/components/form/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Form(_ref) {\n  _s();\n  let {\n    store,\n    currentSelected,\n    cloningInitialized\n  } = _ref;\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [isInputChanged, setInputChange] = useState(false);\n\n  // getting title from Form and change title state\n  const getTitleFormInput = e => {\n    // console.log(e.currentTarget.value);\n    if (e.currentTarget.value !== null && e.currentTarget.value !== '') {\n      setInputChange(true);\n      setTitle(e.currentTarget.value);\n    }\n  };\n\n  // getting description from Form and change description state\n  const getDescriptionForm = e => {\n    if (e.currentTarget.value !== null && e.currentTarget.value !== '') {\n      setInputChange(true);\n      setDescription(e.currentTarget.value); //change state \n    }\n  };\n\n  // processing/storing a new list\n  const processingForm = e => {\n    e.preventDefault(); // prevent the default form submission\n    store({\n      id: Date.now(),\n      text: title,\n      description: description\n    });\n  };\n  useEffect(() => {\n    // if user makes changed in the input\n    if (isInputChanged) {\n      return;\n    }\n\n    // if user click on clone btton, then select the selected item\n    if (currentSelected !== null && currentSelected !== '' && currentSelected !== undefined) {\n      let text = currentSelected[0].text;\n      let description = currentSelected[0].description;\n      setTitle(text);\n      setDescription(description);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-8 offset-2 mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: processingForm,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"form-label\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"title\",\n            value: title || '' // if we have title, pass that, otherwise \"\"\n            ,\n            onChange: getTitleFormInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            className: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            className: \"form-control\",\n            name: \"description\",\n            cols: \"30\",\n            rows: \"10\",\n            value: description || '' // if we have description, pass that, otherwise \"\"\n            ,\n            onChange: getDescriptionForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Form, \"kvtqDbjtK8hnMTKPWJ1/HpDl6Zo=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_ref","_s","store","currentSelected","cloningInitialized","title","setTitle","description","setDescription","isInputChanged","setInputChange","getTitleFormInput","e","currentTarget","value","getDescriptionForm","processingForm","preventDefault","id","Date","now","text","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","onChange","name","cols","rows","_c","$RefreshReg$"],"sources":["/Users/quanweigu/Desktop/Tech/React/Note-App-React/src/components/form/Form.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Form({ store, currentSelected, cloningInitialized }) {\n    const [title, setTitle] = useState();\n    const [description, setDescription] = useState();\n    const [isInputChanged, setInputChange] = useState(false);\n\n    // getting title from Form and change title state\n    const getTitleFormInput = (e) => {\n        // console.log(e.currentTarget.value);\n        if (e.currentTarget.value !== null && e.currentTarget.value !== '') {\n            setInputChange(true);\n            setTitle(e.currentTarget.value);\n        }\n    }\n\n    // getting description from Form and change description state\n    const getDescriptionForm = (e) => {\n        if (e.currentTarget.value !== null && e.currentTarget.value !== '') {\n            setInputChange(true);\n            setDescription(e.currentTarget.value); //change state \n        }\n    }\n\n    // processing/storing a new list\n    const processingForm = (e) => {\n        e.preventDefault(); // prevent the default form submission\n        store({\n            id: Date.now(),\n            text: title,\n            description: description\n        });\n    }\n\n    useEffect(() => {\n        // if user makes changed in the input\n        if (isInputChanged) {\n            return;\n        }\n\n        // if user click on clone btton, then select the selected item\n        if (currentSelected !== null && currentSelected !== '' && currentSelected !== undefined) {\n            let text = currentSelected[0].text;\n            let description = currentSelected[0].description;\n            setTitle(text);\n            setDescription(description);\n        }\n    });\n\n    return (\n        <>\n            <hr />\n            <div className=\"col-md-8 offset-2 mt-5\">\n                <form onSubmit={processingForm}>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"title\" className=\"form-label\">Title</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            id=\"title\"\n                            value={title || ''} // if we have title, pass that, otherwise \"\"\n                            onChange={getTitleFormInput} />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"description\" className=\"form-label\">Description</label>\n                        <textarea id=\"description\"\n                            className=\"form-control\"\n                            name=\"description\"\n                            cols=\"30\"\n                            rows=\"10\"\n                            value={description || ''} // if we have description, pass that, otherwise \"\"\n                            onChange={getDescriptionForm}\n                        ></textarea>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n            </div >\n            <hr />\n        </>\n    )\n}\n\nexport default Form\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}